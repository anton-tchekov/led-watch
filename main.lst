   1               		.file	"main.c"
   2               	__SP_L__ = 0x3d
   3               	__SREG__ = 0x3f
   4               	__tmp_reg__ = 0
   5               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  14               	mode_idle:
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <util/delay.h>
   3:main.c        **** #include <avr/pgmspace.h>
   4:main.c        **** #include <avr/interrupt.h>
   5:main.c        **** #include <string.h>
   6:main.c        **** #include <stdint.h>
   7:main.c        **** #include "led.c"
   8:main.c        **** #include "timer.c"
   9:main.c        **** #include "piezo.c"
  10:main.c        **** 
  11:main.c        **** #define MODE_IDLE   0
  12:main.c        **** #define MODE_CLOCK  1
  13:main.c        **** #define MODE_UART   2
  14:main.c        **** #define MODE_ALARM  3
  15:main.c        **** 
  16:main.c        **** static volatile uint8_t _mode;
  17:main.c        **** 
  18:main.c        **** static void mode_idle(void)
  19:main.c        **** {
  16               	.LM0:
  17               	.LFBB1:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  20:main.c        **** 	_mode = MODE_IDLE;
  23               	.LM1:
  24 0000 1092 0000 		sts _mode,__zero_reg__
  21:main.c        **** 	_beep = 0;
  26               	.LM2:
  27 0004 1092 0000 		sts _beep,__zero_reg__
  22:main.c        **** 	_display = 0;
  29               	.LM3:
  30 0008 1092 0000 		sts _display,__zero_reg__
  31 000c 1092 0000 		sts _display+1,__zero_reg__
  32 0010 1092 0000 		sts _display+2,__zero_reg__
  33 0014 1092 0000 		sts _display+3,__zero_reg__
  34               	/* epilogue start */
  23:main.c        **** }
  36               	.LM4:
  37 0018 0895      		ret
  39               	.Lscope1:
  47               	uart_tx_str_P:
  49               	.Ltext1:
   1:uart.c        **** #define UART_BAUD 9600
   2:uart.c        **** #define _BAUD         (((F_CPU / (UART_BAUD * 16UL))) - 1)
   3:uart.c        **** 
   4:uart.c        **** static void uart_tx_str_P(const char *s);
   5:uart.c        **** 
   6:uart.c        **** static void uart_init(void)
   7:uart.c        **** {
   8:uart.c        **** 	/* Disable Pullups */
   9:uart.c        **** 	PORTD &= ~((1 << 0) | (1 << 1));
  10:uart.c        **** 
  11:uart.c        **** 	UCSRB = (1 << RXEN) | (1 << TXEN);
  12:uart.c        **** 	UCSRC = (1 << UCSZ1) | (1 << UCSZ0);
  13:uart.c        **** 	UBRRL = (uint8_t)(_BAUD & 0xFF);
  14:uart.c        **** 	UBRRH = (uint8_t)((_BAUD >> 8) & 0xFF);
  15:uart.c        **** 
  16:uart.c        **** 	uart_tx_str_P(PSTR("RDY\n"));
  17:uart.c        **** }
  18:uart.c        **** 
  19:uart.c        **** static char uart_rxc(void)
  20:uart.c        **** {
  21:uart.c        **** 	if(!(UCSRA & (1 << RXC)))
  22:uart.c        **** 	{
  23:uart.c        **** 		return -1;
  24:uart.c        **** 	}
  25:uart.c        **** 
  26:uart.c        **** 	return UDR;
  27:uart.c        **** }
  28:uart.c        **** 
  29:uart.c        **** static char uart_rx(void)
  30:uart.c        **** {
  31:uart.c        **** 	while(!(UCSRA & (1 << RXC))) ;
  32:uart.c        **** 	return UDR;
  33:uart.c        **** }
  34:uart.c        **** 
  35:uart.c        **** static void uart_tx(char c)
  36:uart.c        **** {
  37:uart.c        **** 	while(!(UCSRA & (1 << UDRE))) ;
  38:uart.c        **** 	UDR = c;
  39:uart.c        **** }
  40:uart.c        **** 
  41:uart.c        **** static void uart_tx_str_P(const char *s)
  42:uart.c        **** {
  51               	.LM5:
  52               	.LFBB2:
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  57 001a FC01      		movw r30,r24
  58               	.L3:
  59               	.LBB5:
  43:uart.c        **** 	register char c;
  44:uart.c        **** 	while((c = pgm_read_byte(s++)))
  61               	.LM6:
  62               	/* #APP */
  63               	 ;  44 "uart.c" 1
  64 001c 8491      		lpm r24, Z
  65               		
  66               	 ;  0 "" 2
  67               	/* #NOAPP */
  68               	.LBE5:
  70               	.LM7:
  71 001e 8111      		cpse r24,__zero_reg__
  72 0020 00C0      		rjmp .L4
  73               	/* epilogue start */
  45:uart.c        **** 	{
  46:uart.c        **** 		uart_tx(c);
  47:uart.c        **** 	}
  48:uart.c        **** }
  75               	.LM8:
  76 0022 0895      		ret
  77               	.L4:
  78               	.LBB6:
  79               	.LBB7:
  37:uart.c        **** 	UDR = c;
  81               	.LM9:
  82 0024 5D9B      		sbis 0xb,5
  83 0026 00C0      		rjmp .L4
  38:uart.c        **** }
  85               	.LM10:
  86 0028 8CB9      		out 0xc,r24
  87 002a 3196      		adiw r30,1
  39:uart.c        **** 
  89               	.LM11:
  90 002c 00C0      		rjmp .L3
  91               	.LBE7:
  92               	.LBE6:
  96               	.Lscope2:
 100               	get_digit:
 102               	.Ltext2:
  24:main.c        **** 
  25:main.c        **** #include "button.c"
  26:main.c        **** #include "font.c"
  27:main.c        **** #include "clock.c"
  28:main.c        **** #include "uart.c"
  29:main.c        **** #include "alarm.c"
  30:main.c        **** 
  31:main.c        **** static uint8_t get_digit(void)
  32:main.c        **** {
 104               	.LM12:
 105               	.LFBB3:
 106               	/* prologue: function */
 107               	/* frame size = 0 */
 108               	/* stack size = 0 */
 109               	.L__stack_usage = 0
 110               	.L9:
 111               	.LBB10:
 112               	.LBB11:
 114               	.Ltext3:
  31:uart.c        **** 	return UDR;
 116               	.LM13:
 117 002e 5F9B      		sbis 0xb,7
 118 0030 00C0      		rjmp .L9
  32:uart.c        **** }
 120               	.LM14:
 121 0032 8CB1      		in r24,0xc
 122               	.LBE11:
 123               	.LBE10:
 125               	.Ltext4:
  33:main.c        **** 	return uart_rx() - '0';
  34:main.c        **** }
 127               	.LM15:
 128 0034 8053      		subi r24,lo8(-(-48))
 129               	/* epilogue start */
 130 0036 0895      		ret
 132               	.Lscope3:
 136               	parse_digits:
  35:main.c        **** 
  36:main.c        **** static uint8_t parse_digits(void)
  37:main.c        **** {
 138               	.LM16:
 139               	.LFBB4:
 140 0038 CF93      		push r28
 141               	/* prologue: function */
 142               	/* frame size = 0 */
 143               	/* stack size = 1 */
 144               	.L__stack_usage = 1
  38:main.c        **** 	uint8_t c, d;
  39:main.c        **** 	c = get_digit();
 146               	.LM17:
 147 003a 00D0      		rcall get_digit
 148 003c C82F      		mov r28,r24
  40:main.c        **** 	d = get_digit();
 150               	.LM18:
 151 003e 00D0      		rcall get_digit
 152 0040 982F      		mov r25,r24
  41:main.c        **** 	return c * 10 + d;
 154               	.LM19:
 155 0042 8C2F      		mov r24,r28
 156 0044 6AE0      		ldi r22,lo8(10)
 157 0046 00D0      		rcall __mulqi3
  42:main.c        **** }
 159               	.LM20:
 160 0048 890F      		add r24,r25
 161               	/* epilogue start */
 162 004a CF91      		pop r28
 163 004c 0895      		ret
 168               	.Lscope4:
 170               		.section	.text.startup,"ax",@progbits
 175               	.global	main
 177               	main:
  43:main.c        **** 
  44:main.c        **** int main(void)
  45:main.c        **** {
 179               	.LM21:
 180               	.LFBB5:
 181               	/* prologue: function */
 182               	/* frame size = 0 */
 183               	/* stack size = 0 */
 184               	.L__stack_usage = 0
 185               	.LBB24:
 186               	.LBB25:
 188               	.Ltext5:
   1:led.c         **** #define BRIGHTNESS_FACTOR 10
   2:led.c         **** 
   3:led.c         **** static uint32_t _display;
   4:led.c         **** 
   5:led.c         **** static void led_init(void)
   6:led.c         **** {
   7:led.c         **** 	/* LED Pins output */
   8:led.c         **** 	DDRB = 0xFF;
 190               	.LM22:
 191 0000 8FEF      		ldi r24,lo8(-1)
 192 0002 87BB      		out 0x17,r24
   9:led.c         **** 	DDRD |= (1 << 6) | (1 << 5) | (1 << 4);
 194               	.LM23:
 195 0004 81B3      		in r24,0x11
 196 0006 8067      		ori r24,lo8(112)
 197 0008 81BB      		out 0x11,r24
 198               	.LBE25:
 199               	.LBE24:
 200               	.LBB26:
 201               	.LBB27:
 203               	.Ltext6:
   1:button.c      **** #define BUTTON_COUNT           4
   2:button.c      **** #define BUTTON_PRESS_TICKS   750
   3:button.c      **** 
   4:button.c      **** static uint16_t button_ticks[BUTTON_COUNT];
   5:button.c      **** 
   6:button.c      **** static void button_event(uint8_t button);
   7:button.c      **** 
   8:button.c      **** static void button_init(void)
   9:button.c      **** {
  10:button.c      **** 	PORTD |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3);
 205               	.LM24:
 206 000a 82B3      		in r24,0x12
 207 000c 8F60      		ori r24,lo8(15)
 208 000e 82BB      		out 0x12,r24
 209               	.LBE27:
 210               	.LBE26:
 211               	.LBB28:
 212               	.LBB29:
 214               	.Ltext7:
   1:timer.c       **** #define SECOND_TICKS 10800
   2:timer.c       **** 
   3:timer.c       **** static uint16_t
   4:timer.c       **** 	_ticks;
   5:timer.c       **** 
   6:timer.c       **** static volatile uint8_t
   7:timer.c       **** 	_seconds,
   8:timer.c       **** 	_minutes,
   9:timer.c       **** 	_hours,
  10:timer.c       **** 	_weekday;
  11:timer.c       **** 
  12:timer.c       **** static void timer_init(void)
  13:timer.c       **** {
  14:timer.c       **** 	TCCR0A |= (1 << WGM01);
 216               	.LM25:
 217 0010 80B7      		in r24,0x30
 218 0012 8260      		ori r24,lo8(2)
 219 0014 80BF      		out 0x30,r24
  15:timer.c       **** 	TCCR0B |= (1 << CS01) | (1 << CS00);
 221               	.LM26:
 222 0016 83B7      		in r24,0x33
 223 0018 8360      		ori r24,lo8(3)
 224 001a 83BF      		out 0x33,r24
  16:timer.c       **** 	OCR0A = 16;
 226               	.LM27:
 227 001c 80E1      		ldi r24,lo8(16)
 228 001e 86BF      		out 0x36,r24
  17:timer.c       **** 	TIMSK |= (1 << OCIE0A);
 230               	.LM28:
 231 0020 89B7      		in r24,0x39
 232 0022 8160      		ori r24,lo8(1)
 233 0024 89BF      		out 0x39,r24
  18:timer.c       **** 	sei();
 235               	.LM29:
 236               	/* #APP */
 237               	 ;  18 "timer.c" 1
 238 0026 7894      		sei
 239               	 ;  0 "" 2
 240               	/* #NOAPP */
 241               	.LBE29:
 242               	.LBE28:
 243               	.LBB30:
 245               	.Ltext8:
  46:main.c        **** 	led_init();
  47:main.c        **** 	button_init();
  48:main.c        **** 	timer_init();
  49:main.c        **** 	for(;;)
  50:main.c        **** 	{
  51:main.c        **** next:
  52:main.c        **** 		if(_mode == MODE_UART)
  53:main.c        **** 		{
  54:main.c        **** 			/* Command Start */
  55:main.c        **** 			while(uart_rxc() != 'A')
  56:main.c        **** 			{
  57:main.c        **** 				if(_mode != MODE_UART)
  58:main.c        **** 				{
  59:main.c        **** 					goto next;
  60:main.c        **** 				}
  61:main.c        **** 			}
  62:main.c        **** 
  63:main.c        **** 			/* Set Clock Command: */
  64:main.c        **** 			/* [WEEKDAY 0-6][HOUR 00-23][MINUTE 0-59] */
  65:main.c        **** 			_weekday = get_digit();
  66:main.c        **** 			_hours = parse_digits();
  67:main.c        **** 			_minutes = parse_digits();
  68:main.c        **** 
  69:main.c        **** 			/* Set Alarms Command: */
  70:main.c        **** 			/* [ALARM COUNT 0-8] */
  71:main.c        **** 			/* N x [WEEKDAY 0-6][HOUR 00-23][MINUTE 0-59][ICON (25 Chars)] */
  72:main.c        **** 			_alarms_count = get_digit();
  73:main.c        **** 			uint8_t i, j;
  74:main.c        **** 			for(i = 0; i < _alarms_count; ++i)
  75:main.c        **** 			{
  76:main.c        **** 				_alarms[i].Weekday = get_digit();
  77:main.c        **** 				_alarms[i].Hours = parse_digits();
  78:main.c        **** 				_alarms[i].Minutes = parse_digits();
  79:main.c        **** 				_alarms[i].Icon = 0;
  80:main.c        **** 				for(j = 0; j < 25; ++j)
  81:main.c        **** 				{
  82:main.c        **** 					if(uart_rx() == '1')
  83:main.c        **** 					{
  84:main.c        **** 						_alarms[i].Icon |= (1UL << (uint32_t)j);
 247               	.LM30:
 248 0028 812C      		mov r8,__zero_reg__
 249 002a 912C      		mov r9,__zero_reg__
 250 002c 5401      		movw r10,r8
 251 002e 8394      		inc r8
 252               	.L17:
  57:main.c        **** 				{
 254               	.LM31:
 255 0030 8091 0000 		lds r24,_mode
  57:main.c        **** 				{
 257               	.LM32:
 258 0034 8230      		cpi r24,lo8(2)
 259 0036 01F4      		brne .L17
 260               	.LBB31:
 261               	.LBB32:
 263               	.Ltext9:
  21:uart.c        **** 	{
 265               	.LM33:
 266 0038 5F9B      		sbis 0xb,7
 267 003a 00C0      		rjmp .L17
  26:uart.c        **** }
 269               	.LM34:
 270 003c 8CB1      		in r24,0xc
 271               	.LBE32:
 272               	.LBE31:
 274               	.Ltext10:
  55:main.c        **** 			{
 276               	.LM35:
 277 003e 8134      		cpi r24,lo8(65)
 278 0040 01F4      		brne .L17
  65:main.c        **** 			_hours = parse_digits();
 280               	.LM36:
 281 0042 00D0      		rcall get_digit
  65:main.c        **** 			_hours = parse_digits();
 283               	.LM37:
 284 0044 8093 0000 		sts _weekday,r24
  66:main.c        **** 			_minutes = parse_digits();
 286               	.LM38:
 287 0048 00D0      		rcall parse_digits
  66:main.c        **** 			_minutes = parse_digits();
 289               	.LM39:
 290 004a 8093 0000 		sts _hours,r24
  67:main.c        **** 
 292               	.LM40:
 293 004e 00D0      		rcall parse_digits
  67:main.c        **** 
 295               	.LM41:
 296 0050 8093 0000 		sts _minutes,r24
  72:main.c        **** 			uint8_t i, j;
 298               	.LM42:
 299 0054 00D0      		rcall get_digit
  72:main.c        **** 			uint8_t i, j;
 301               	.LM43:
 302 0056 8093 0000 		sts _alarms_count,r24
  74:main.c        **** 			{
 304               	.LM44:
 305 005a 10E0      		ldi r17,0
 306               	.L18:
  74:main.c        **** 			{
 308               	.LM45:
 309 005c 8091 0000 		lds r24,_alarms_count
 310 0060 1817      		cp r17,r24
 311 0062 00F0      		brlo .L22
  85:main.c        **** 					}
  86:main.c        **** 				}
  87:main.c        **** 			}
  88:main.c        **** 
  89:main.c        **** 			uart_tx_str_P(PSTR("ACK\n"));
 313               	.LM46:
 314 0064 80E0      		ldi r24,lo8(__c.7)
 315 0066 90E0      		ldi r25,hi8(__c.7)
 316 0068 00D0      		rcall uart_tx_str_P
  90:main.c        **** 			mode_idle();
 318               	.LM47:
 319 006a 00D0      		rcall mode_idle
 320 006c 00C0      		rjmp .L17
 321               	.L22:
  76:main.c        **** 				_alarms[i].Hours = parse_digits();
 323               	.LM48:
 324 006e E12E      		mov r14,r17
 325 0070 F12C      		mov r15,__zero_reg__
  76:main.c        **** 				_alarms[i].Hours = parse_digits();
 327               	.LM49:
 328 0072 00D0      		rcall get_digit
 329 0074 282F      		mov r18,r24
  76:main.c        **** 				_alarms[i].Hours = parse_digits();
 331               	.LM50:
 332 0076 C701      		movw r24,r14
 333 0078 67E0      		ldi r22,lo8(7)
 334 007a 70E0      		ldi r23,0
 335 007c 00D0      		rcall __mulhi3
 336 007e EC01      		movw r28,r24
 337 0080 C050      		subi r28,lo8(-(_alarms))
 338 0082 D040      		sbci r29,hi8(-(_alarms))
 339 0084 2A83      		std Y+2,r18
  77:main.c        **** 				_alarms[i].Minutes = parse_digits();
 341               	.LM51:
 342 0086 00D0      		rcall parse_digits
  77:main.c        **** 				_alarms[i].Minutes = parse_digits();
 344               	.LM52:
 345 0088 8983      		std Y+1,r24
  78:main.c        **** 				_alarms[i].Icon = 0;
 347               	.LM53:
 348 008a 00D0      		rcall parse_digits
  78:main.c        **** 				_alarms[i].Icon = 0;
 350               	.LM54:
 351 008c 8883      		st Y,r24
  79:main.c        **** 				for(j = 0; j < 25; ++j)
 353               	.LM55:
 354 008e 1B82      		std Y+3,__zero_reg__
 355 0090 1C82      		std Y+4,__zero_reg__
 356 0092 1D82      		std Y+5,__zero_reg__
 357 0094 1E82      		std Y+6,__zero_reg__
 358 0096 30E0      		ldi r19,0
 359 0098 20E0      		ldi r18,0
 360               	.L19:
 361               	.LBB33:
 362               	.LBB34:
 364               	.Ltext11:
  31:uart.c        **** 	return UDR;
 366               	.LM56:
 367 009a 5F9B      		sbis 0xb,7
 368 009c 00C0      		rjmp .L19
  32:uart.c        **** }
 370               	.LM57:
 371 009e 8CB1      		in r24,0xc
 372               	.LBE34:
 373               	.LBE33:
 375               	.Ltext12:
  82:main.c        **** 					{
 377               	.LM58:
 378 00a0 8133      		cpi r24,lo8(49)
 379 00a2 01F4      		brne .L20
  84:main.c        **** 					}
 381               	.LM59:
 382 00a4 C701      		movw r24,r14
 383 00a6 67E0      		ldi r22,lo8(7)
 384 00a8 70E0      		ldi r23,0
 385 00aa 00D0      		rcall __mulhi3
 386 00ac FC01      		movw r30,r24
 387 00ae E050      		subi r30,lo8(-(_alarms))
 388 00b0 F040      		sbci r31,hi8(-(_alarms))
 389 00b2 4381      		ldd r20,Z+3
 390 00b4 5481      		ldd r21,Z+4
 391 00b6 6581      		ldd r22,Z+5
 392 00b8 7681      		ldd r23,Z+6
  84:main.c        **** 					}
 394               	.LM60:
 395 00ba D501      		movw r26,r10
 396 00bc C401      		movw r24,r8
 397 00be 022E      		mov r0,r18
 398 00c0 00C0      		rjmp 2f
 399               		1:
 400 00c2 880F      		lsl r24
 401 00c4 991F      		rol r25
 402 00c6 AA1F      		rol r26
 403 00c8 BB1F      		rol r27
 404               		2:
 405 00ca 0A94      		dec r0
 406 00cc 02F4      		brpl 1b
  84:main.c        **** 					}
 408               	.LM61:
 409 00ce 842B      		or r24,r20
 410 00d0 952B      		or r25,r21
 411 00d2 A62B      		or r26,r22
 412 00d4 B72B      		or r27,r23
 413 00d6 8383      		std Z+3,r24
 414 00d8 9483      		std Z+4,r25
 415 00da A583      		std Z+5,r26
 416 00dc B683      		std Z+6,r27
 417               	.L20:
  80:main.c        **** 				{
 419               	.LM62:
 420 00de 2F5F      		subi r18,-1
 421 00e0 3F4F      		sbci r19,-1
 422 00e2 2931      		cpi r18,25
 423 00e4 3105      		cpc r19,__zero_reg__
 424 00e6 01F4      		brne .L19
  74:main.c        **** 			{
 426               	.LM63:
 427 00e8 1F5F      		subi r17,lo8(-(1))
 428 00ea 00C0      		rjmp .L18
 429               	.LBE30:
 434               	.Lscope5:
 436               		.text
 438               	.global	__vector_13
 440               	__vector_13:
  91:main.c        **** 		}
  92:main.c        **** 	}
  93:main.c        **** 
  94:main.c        **** 	return 0;
  95:main.c        **** }
  96:main.c        **** 
  97:main.c        **** ISR(TIMER0_COMPA_vect)
  98:main.c        **** {
 442               	.LM64:
 443               	.LFBB6:
 444 004e 1F92      		push r1
 445 0050 0F92      		push r0
 446 0052 0FB6      		in r0,__SREG__
 447 0054 0F92      		push r0
 448 0056 1124      		clr __zero_reg__
 449 0058 6F92      		push r6
 450 005a 7F92      		push r7
 451 005c 8F92      		push r8
 452 005e 9F92      		push r9
 453 0060 AF92      		push r10
 454 0062 BF92      		push r11
 455 0064 CF92      		push r12
 456 0066 DF92      		push r13
 457 0068 EF92      		push r14
 458 006a FF92      		push r15
 459 006c 0F93      		push r16
 460 006e 1F93      		push r17
 461 0070 2F93      		push r18
 462 0072 3F93      		push r19
 463 0074 4F93      		push r20
 464 0076 5F93      		push r21
 465 0078 6F93      		push r22
 466 007a 7F93      		push r23
 467 007c 8F93      		push r24
 468 007e 9F93      		push r25
 469 0080 AF93      		push r26
 470 0082 BF93      		push r27
 471 0084 EF93      		push r30
 472 0086 FF93      		push r31
 473 0088 CF93      		push r28
 474 008a DF93      		push r29
 475 008c CDB7      		in r28,__SP_L__
 476 008e DD27      		clr r29
 477 0090 C550      		subi r28,lo8(-(-5))
 478 0092 CDBF      		out __SP_L__,r28
 479               	/* prologue: Signal */
 480               	/* frame size = 5 */
 481               	/* stack size = 34 */
 482               	.L__stack_usage = 34
  99:main.c        **** 	if(_mode == MODE_CLOCK)
 484               	.LM65:
 485 0094 8091 0000 		lds r24,_mode
 487               	.LM66:
 488 0098 8130      		cpi r24,lo8(1)
 489 009a 01F4      		brne .L30
 490               	.LBB74:
 491               	.LBB75:
 493               	.Ltext13:
   1:clock.c       **** static uint8_t _cur, _buf[4];
   2:clock.c       **** 
   3:clock.c       **** static void scroll_update(void)
   4:clock.c       **** {
   5:clock.c       **** 	static uint16_t _cnt;
   6:clock.c       **** 	if(++_cnt < 3000)
 495               	.LM67:
 496 009c 8091 0000 		lds r24,_cnt.6
 497 00a0 9091 0000 		lds r25,_cnt.6+1
 498 00a4 0196      		adiw r24,1
 500               	.LM68:
 501 00a6 883B      		cpi r24,-72
 502 00a8 2BE0      		ldi r18,11
 503 00aa 9207      		cpc r25,r18
 504 00ac 00F0      		brlo .+2
 505 00ae 00C0      		rjmp .L31
 506 00b0 9093 0000 		sts _cnt.6+1,r25
 507 00b4 8093 0000 		sts _cnt.6,r24
 508               	.L30:
 509               	.LBE75:
 510               	.LBE74:
 511               	.LBB84:
 512               	.LBB85:
 514               	.Ltext14:
  19:timer.c       **** }
  20:timer.c       **** 
  21:timer.c       **** static void timer_update(void)
  22:timer.c       **** {
  23:timer.c       **** 	if(++_ticks < SECOND_TICKS)
 516               	.LM69:
 517 00b8 8091 0000 		lds r24,_ticks
 518 00bc 9091 0000 		lds r25,_ticks+1
 519 00c0 0196      		adiw r24,1
 521               	.LM70:
 522 00c2 8033      		cpi r24,48
 523 00c4 FAE2      		ldi r31,42
 524 00c6 9F07      		cpc r25,r31
 525 00c8 00F0      		brlo .+2
 526 00ca 00C0      		rjmp .L39
 527 00cc 9093 0000 		sts _ticks+1,r25
 528 00d0 8093 0000 		sts _ticks,r24
 529               	.L40:
 530               	.LBE85:
 531               	.LBE84:
 532               	.LBB87:
 533               	.LBB88:
 535               	.Ltext15:
   1:piezo.c       **** static uint8_t _beep;
   2:piezo.c       **** 
   3:piezo.c       **** static void piezo_update(void)
   4:piezo.c       **** {
   5:piezo.c       **** 	if(_beep)
 537               	.LM71:
 538 00d4 8091 0000 		lds r24,_beep
 539 00d8 8823      		tst r24
 540 00da 01F0      		breq .L42
 541               	.LBB89:
   6:piezo.c       **** 	{
   7:piezo.c       **** 		uint8_t l = _ticks & 0x0F;
 543               	.LM72:
 544 00dc 8091 0000 		lds r24,_ticks
 545 00e0 8F70      		andi r24,lo8(15)
   8:piezo.c       **** 		if(l == 0)
 547               	.LM73:
 548 00e2 01F0      		breq .+2
 549 00e4 00C0      		rjmp .L43
   9:piezo.c       **** 		{
  10:piezo.c       **** 			PORTD |= (1 << 4);
 551               	.LM74:
 552 00e6 949A      		sbi 0x12,4
 553               	.L42:
 554               	.LBE89:
 555               	.LBE88:
 556               	.LBE87:
 557               	.LBB92:
 558               	.LBB93:
 560               	.Ltext16:
  11:button.c      **** }
  12:button.c      **** 
  13:button.c      **** static void button_update(void)
  14:button.c      **** {
  15:button.c      **** 	uint8_t i, start = (_mode == MODE_UART) ? 2 : 0;
 562               	.LM75:
 563 00e8 8091 0000 		lds r24,_mode
 565               	.LM76:
 566 00ec 11E0      		ldi r17,lo8(1)
 567 00ee 8230      		cpi r24,lo8(2)
 568 00f0 01F0      		breq .L44
 569 00f2 10E0      		ldi r17,0
 570               	.L44:
 571 00f4 110F      		lsl r17
  16:button.c      **** 	for(i = start; i < BUTTON_COUNT; ++i)
  17:button.c      **** 	{
  18:button.c      **** 		if(!(PIND & (1 << i)))
  19:button.c      **** 		{
  20:button.c      **** 			if(button_ticks[i] < BUTTON_PRESS_TICKS)
  21:button.c      **** 			{
  22:button.c      **** 				++button_ticks[i];
  23:button.c      **** 			}
  24:button.c      **** 			else if(button_ticks[i] == BUTTON_PRESS_TICKS)
  25:button.c      **** 			{
  26:button.c      **** 				button_ticks[i] = BUTTON_PRESS_TICKS + 1;
 573               	.LM77:
 574 00f6 2FEE      		ldi r18,lo8(-17)
 575 00f8 E22E      		mov r14,r18
 576 00fa 22E0      		ldi r18,lo8(2)
 577 00fc F22E      		mov r15,r18
 578               	.LBB94:
 579               	.LBB95:
 580               	.LBB96:
 581               	.LBB97:
 582               	.LBB98:
 583               	.LBB99:
 585               	.Ltext17:
   7:clock.c       **** 	{
   8:clock.c       **** 		return;
   9:clock.c       **** 	}
  10:clock.c       **** 
  11:clock.c       **** 	_cnt = 0;
  12:clock.c       **** 
  13:clock.c       **** 	if(_cur < 4)
  14:clock.c       **** 	{
  15:clock.c       **** 		uint8_t lines[5], i, o, w, v, j, s = 0;
  16:clock.c       **** 		v = _buf[_cur];
  17:clock.c       **** 		o = pgm_read_byte(&_map[v]);
  18:clock.c       **** 		w = pgm_read_byte(&_map[v + 1]) - o;
  19:clock.c       **** 		for(i = 0; i < 5; ++i)
  20:clock.c       **** 		{
  21:clock.c       **** 			lines[i] = 0;
  22:clock.c       **** 		}
  23:clock.c       **** 
  24:clock.c       **** 		if((_cur & 1) == 1)
  25:clock.c       **** 		{
  26:clock.c       **** 			s = 5 - w;
  27:clock.c       **** 		}
  28:clock.c       **** 
  29:clock.c       **** 		for(i = 0; i < w; ++i)
  30:clock.c       **** 		{
  31:clock.c       **** 			uint8_t r = pgm_read_byte(_font + o + i);
  32:clock.c       **** 			for(j = 0; j < 5; ++j)
  33:clock.c       **** 			{
  34:clock.c       **** 				if(r & (1 << j))
  35:clock.c       **** 				{
  36:clock.c       **** 					lines[4 - j] |= (1 << (s + i));
  37:clock.c       **** 				}
  38:clock.c       **** 			}
  39:clock.c       **** 		}
  40:clock.c       **** 
  41:clock.c       **** 		_display =
  42:clock.c       **** 			((uint32_t)(lines[0]) <<  0UL) |
  43:clock.c       **** 			((uint32_t)(lines[1]) <<  5UL) |
  44:clock.c       **** 			((uint32_t)(lines[2]) << 10UL) |
  45:clock.c       **** 			((uint32_t)(lines[3]) << 15UL) |
  46:clock.c       **** 			((uint32_t)(lines[4]) << 20UL);
  47:clock.c       **** 	}
  48:clock.c       **** 
  49:clock.c       **** 	if(++_cur == 5)
  50:clock.c       **** 	{
  51:clock.c       **** 		mode_idle();
  52:clock.c       **** 	}
  53:clock.c       **** }
  54:clock.c       **** 
  55:clock.c       **** static void mode_clock(void)
  56:clock.c       **** {
  57:clock.c       **** 	_buf[0] = _hours / 10;
 587               	.LM78:
 588 00fe 0AE0      		ldi r16,lo8(10)
  58:clock.c       **** 	_buf[1] = _hours % 10;
  59:clock.c       **** 	_buf[2] = _minutes / 10;
  60:clock.c       **** 	_buf[3] = _minutes % 10;
  61:clock.c       **** 	_cur = 0;
  62:clock.c       **** 	_mode = MODE_CLOCK;
 590               	.LM79:
 591 0100 DD24      		clr r13
 592 0102 D394      		inc r13
 593               	.LBE99:
 594               	.LBE98:
 595               	.LBB101:
 596               	.LBB102:
 598               	.Ltext18:
  49:uart.c        **** 
  50:uart.c        **** static void mode_uart(void)
  51:uart.c        **** {
  52:uart.c        **** 	_display =
 600               	.LM80:
 601 0104 38EE      		ldi r19,lo8(-24)
 602 0106 832E      		mov r8,r19
 603 0108 43EA      		ldi r20,lo8(-93)
 604 010a 742E      		mov r7,r20
 605 010c 55EA      		ldi r21,lo8(-91)
 606 010e 652E      		mov r6,r21
 607               	.LBB103:
 608               	.LBB104:
  11:uart.c        **** 	UCSRC = (1 << UCSZ1) | (1 << UCSZ0);
 610               	.LM81:
 611 0110 68E1      		ldi r22,lo8(24)
 612 0112 C62E      		mov r12,r22
  12:uart.c        **** 	UBRRL = (uint8_t)(_BAUD & 0xFF);
 614               	.LM82:
 615 0114 76E0      		ldi r23,lo8(6)
 616 0116 B72E      		mov r11,r23
  13:uart.c        **** 	UBRRH = (uint8_t)((_BAUD >> 8) & 0xFF);
 618               	.LM83:
 619 0118 E7E4      		ldi r30,lo8(71)
 620 011a AE2E      		mov r10,r30
 621               	.LBE104:
 622               	.LBE103:
  53:uart.c        **** 		(0b01000UL <<  0UL) |
  54:uart.c        **** 		(0b11111UL <<  5UL) |
  55:uart.c        **** 		(0b01000UL << 10UL) |
  56:uart.c        **** 		(0b01011UL << 15UL) |
  57:uart.c        **** 		(0b01010UL << 20UL);
  58:uart.c        **** 
  59:uart.c        **** 	uart_init();
  60:uart.c        **** 	_mode = MODE_UART;
 624               	.LM84:
 625 011c F2E0      		ldi r31,lo8(2)
 626 011e 9F2E      		mov r9,r31
 627               	.L54:
 628               	.LBE102:
 629               	.LBE101:
 630               	.LBE97:
 631               	.LBE96:
 632               	.LBE95:
 633               	.LBE94:
 635               	.Ltext19:
  18:button.c      **** 		{
 637               	.LM85:
 638 0120 80B3      		in r24,0x10
  18:button.c      **** 		{
 640               	.LM86:
 641 0122 E12F      		mov r30,r17
 642 0124 F0E0      		ldi r31,0
  18:button.c      **** 		{
 644               	.LM87:
 645 0126 90E0      		ldi r25,0
  18:button.c      **** 		{
 647               	.LM88:
 648 0128 012E      		mov r0,r17
 649 012a 00C0      		rjmp 2f
 650               		1:
 651 012c 9595      		asr r25
 652 012e 8795      		ror r24
 653               		2:
 654 0130 0A94      		dec r0
 655 0132 02F4      		brpl 1b
 656 0134 EE0F      		lsl r30
 657 0136 FF1F      		rol r31
  20:button.c      **** 			{
 659               	.LM89:
 660 0138 E050      		subi r30,lo8(-(button_ticks))
 661 013a F040      		sbci r31,hi8(-(button_ticks))
  18:button.c      **** 		{
 663               	.LM90:
 664 013c 80FD      		sbrc r24,0
 665 013e 00C0      		rjmp .L45
  20:button.c      **** 			{
 667               	.LM91:
 668 0140 8081      		ld r24,Z
 669 0142 9181      		ldd r25,Z+1
  20:button.c      **** 			{
 671               	.LM92:
 672 0144 8E3E      		cpi r24,-18
 673 0146 22E0      		ldi r18,2
 674 0148 9207      		cpc r25,r18
 675 014a 00F0      		brlo .+2
 676 014c 00C0      		rjmp .L46
  22:button.c      **** 			}
 678               	.LM93:
 679 014e 0196      		adiw r24,1
 680 0150 9183      		std Z+1,r25
 681 0152 8083      		st Z,r24
 682               	.L47:
  16:button.c      **** 	{
 684               	.LM94:
 685 0154 1F5F      		subi r17,lo8(-(1))
  16:button.c      **** 	{
 687               	.LM95:
 688 0156 1430      		cpi r17,lo8(4)
 689 0158 01F4      		brne .L54
 690               	.LBE93:
 691               	.LBE92:
 692               	.LBB121:
 693               	.LBB122:
 695               	.Ltext20:
  10:led.c         **** }
  11:led.c         **** 
  12:led.c         **** static void _led_set(uint8_t line)
  13:led.c         **** {
  14:led.c         **** 	uint8_t j = 5 * line;
  15:led.c         **** 
  16:led.c         **** 	/* Disable all lines */
  17:led.c         **** 	PORTB &= ~((1 << 7) |
  18:led.c         **** 			(1 << 6) |
  19:led.c         **** 			(1 << 5) |
  20:led.c         **** 			(1 << 4) |
  21:led.c         **** 			(1 << 3));
  22:led.c         **** 
  23:led.c         **** 	/* Set Current Line */
  24:led.c         **** 	PORTB |= (1 << (line + 3));
  25:led.c         **** 
  26:led.c         **** 	/* LEDs On/Off */
  27:led.c         **** 	PORTB |= (1 << 2) |
  28:led.c         **** 			(1 << 1) |
  29:led.c         **** 			(1 << 0);
  30:led.c         **** 
  31:led.c         **** 	PORTD |= (1 << 6) |
  32:led.c         **** 			(1 << 5);
  33:led.c         **** 
  34:led.c         **** 	if(_display & (1UL << j))
  35:led.c         **** 	{
  36:led.c         **** 		PORTB &= ~(1 << 2);
  37:led.c         **** 	}
  38:led.c         **** 
  39:led.c         **** 	++j;
  40:led.c         **** 	if(_display & (1UL << j))
  41:led.c         **** 	{
  42:led.c         **** 		PORTB &= ~(1 << 1);
  43:led.c         **** 	}
  44:led.c         **** 
  45:led.c         **** 	++j;
  46:led.c         **** 	if(_display & (1UL << j))
  47:led.c         **** 	{
  48:led.c         **** 		PORTB &= ~(1 << 0);
  49:led.c         **** 	}
  50:led.c         **** 
  51:led.c         **** 	++j;
  52:led.c         **** 	if(_display & (1UL << j))
  53:led.c         **** 	{
  54:led.c         **** 		PORTD &= ~(1 << 6);
  55:led.c         **** 	}
  56:led.c         **** 
  57:led.c         **** 	++j;
  58:led.c         **** 	if(_display & (1UL << j))
  59:led.c         **** 	{
  60:led.c         **** 		PORTD &= ~(1 << 5);
  61:led.c         **** 	}
  62:led.c         **** }
  63:led.c         **** 
  64:led.c         **** static void _led_clear_bright(void)
  65:led.c         **** {
  66:led.c         **** 	PORTB |= (1 << 2);
  67:led.c         **** 	PORTB |= (1 << 0);
  68:led.c         **** 	PORTD |= (1 << 5);
  69:led.c         **** }
  70:led.c         **** 
  71:led.c         **** static void led_update(void)
  72:led.c         **** {
  73:led.c         **** 	static uint8_t sd, i;
  74:led.c         **** 
  75:led.c         **** 	if(sd == 0)
 697               	.LM96:
 698 015a 8091 0000 		lds r24,sd.4
 700               	.LM97:
 701 015e 8111      		cpse r24,__zero_reg__
 702 0160 00C0      		rjmp .L55
  76:led.c         **** 	{
  77:led.c         **** 		_led_set(i);
 704               	.LM98:
 705 0162 9091 0000 		lds r25,i.3
 706               	.LBB123:
 707               	.LBB124:
  14:led.c         **** 
 709               	.LM99:
 710 0166 892F      		mov r24,r25
 711 0168 65E0      		ldi r22,lo8(5)
 712 016a 00D0      		rcall __mulqi3
  17:led.c         **** 			(1 << 6) |
 714               	.LM100:
 715 016c 28B3      		in r18,0x18
 716 016e 2770      		andi r18,lo8(7)
 717 0170 28BB      		out 0x18,r18
  24:led.c         **** 
 719               	.LM101:
 720 0172 28B3      		in r18,0x18
  24:led.c         **** 
 722               	.LM102:
 723 0174 9D5F      		subi r25,lo8(-(3))
  24:led.c         **** 
 725               	.LM103:
 726 0176 41E0      		ldi r20,lo8(1)
 727 0178 50E0      		ldi r21,0
 728 017a 00C0      		rjmp 2f
 729               		1:
 730 017c 440F      		lsl r20
 731               		2:
 732 017e 9A95      		dec r25
 733 0180 02F4      		brpl 1b
  24:led.c         **** 
 735               	.LM104:
 736 0182 922F      		mov r25,r18
 737 0184 942B      		or r25,r20
 738 0186 98BB      		out 0x18,r25
  27:led.c         **** 			(1 << 1) |
 740               	.LM105:
 741 0188 98B3      		in r25,0x18
 742 018a 9760      		ori r25,lo8(7)
 743 018c 98BB      		out 0x18,r25
  31:led.c         **** 			(1 << 5);
 745               	.LM106:
 746 018e 92B3      		in r25,0x12
 747 0190 9066      		ori r25,lo8(96)
 748 0192 92BB      		out 0x12,r25
  34:led.c         **** 	{
 750               	.LM107:
 751 0194 4091 0000 		lds r20,_display
 752 0198 5091 0000 		lds r21,_display+1
 753 019c 6091 0000 		lds r22,_display+2
 754 01a0 7091 0000 		lds r23,_display+3
 755 01a4 082E      		mov r0,r24
 756 01a6 00C0      		rjmp 2f
 757               		1:
 758 01a8 7695      		lsr r23
 759 01aa 6795      		ror r22
 760 01ac 5795      		ror r21
 761 01ae 4795      		ror r20
 762               		2:
 763 01b0 0A94      		dec r0
 764 01b2 02F4      		brpl 1b
  34:led.c         **** 	{
 766               	.LM108:
 767 01b4 40FD      		sbrc r20,0
  36:led.c         **** 	}
 769               	.LM109:
 770 01b6 C298      		cbi 0x18,2
 771               	.L56:
  40:led.c         **** 	{
 773               	.LM110:
 774 01b8 4091 0000 		lds r20,_display
 775 01bc 5091 0000 		lds r21,_display+1
 776 01c0 6091 0000 		lds r22,_display+2
 777 01c4 7091 0000 		lds r23,_display+3
 778 01c8 91E0      		ldi r25,lo8(1)
 779 01ca 980F      		add r25,r24
 780 01cc 00C0      		rjmp 2f
 781               		1:
 782 01ce 7695      		lsr r23
 783 01d0 6795      		ror r22
 784 01d2 5795      		ror r21
 785 01d4 4795      		ror r20
 786               		2:
 787 01d6 9A95      		dec r25
 788 01d8 02F4      		brpl 1b
  40:led.c         **** 	{
 790               	.LM111:
 791 01da 40FD      		sbrc r20,0
  42:led.c         **** 	}
 793               	.LM112:
 794 01dc C198      		cbi 0x18,1
 795               	.L57:
  46:led.c         **** 	{
 797               	.LM113:
 798 01de 4091 0000 		lds r20,_display
 799 01e2 5091 0000 		lds r21,_display+1
 800 01e6 6091 0000 		lds r22,_display+2
 801 01ea 7091 0000 		lds r23,_display+3
 802 01ee 92E0      		ldi r25,lo8(2)
 803 01f0 980F      		add r25,r24
 804 01f2 00C0      		rjmp 2f
 805               		1:
 806 01f4 7695      		lsr r23
 807 01f6 6795      		ror r22
 808 01f8 5795      		ror r21
 809 01fa 4795      		ror r20
 810               		2:
 811 01fc 9A95      		dec r25
 812 01fe 02F4      		brpl 1b
  46:led.c         **** 	{
 814               	.LM114:
 815 0200 40FD      		sbrc r20,0
  48:led.c         **** 	}
 817               	.LM115:
 818 0202 C098      		cbi 0x18,0
 819               	.L58:
  52:led.c         **** 	{
 821               	.LM116:
 822 0204 4091 0000 		lds r20,_display
 823 0208 5091 0000 		lds r21,_display+1
 824 020c 6091 0000 		lds r22,_display+2
 825 0210 7091 0000 		lds r23,_display+3
 826 0214 93E0      		ldi r25,lo8(3)
 827 0216 980F      		add r25,r24
 828 0218 00C0      		rjmp 2f
 829               		1:
 830 021a 7695      		lsr r23
 831 021c 6795      		ror r22
 832 021e 5795      		ror r21
 833 0220 4795      		ror r20
 834               		2:
 835 0222 9A95      		dec r25
 836 0224 02F4      		brpl 1b
  52:led.c         **** 	{
 838               	.LM117:
 839 0226 40FD      		sbrc r20,0
  54:led.c         **** 	}
 841               	.LM118:
 842 0228 9698      		cbi 0x12,6
 843               	.L59:
  57:led.c         **** 	if(_display & (1UL << j))
 845               	.LM119:
 846 022a 8C5F      		subi r24,lo8(-(4))
  58:led.c         **** 	{
 848               	.LM120:
 849 022c 4091 0000 		lds r20,_display
 850 0230 5091 0000 		lds r21,_display+1
 851 0234 6091 0000 		lds r22,_display+2
 852 0238 7091 0000 		lds r23,_display+3
 853 023c 00C0      		rjmp 2f
 854               		1:
 855 023e 7695      		lsr r23
 856 0240 6795      		ror r22
 857 0242 5795      		ror r21
 858 0244 4795      		ror r20
 859               		2:
 860 0246 8A95      		dec r24
 861 0248 02F4      		brpl 1b
  58:led.c         **** 	{
 863               	.LM121:
 864 024a 40FD      		sbrc r20,0
  60:led.c         **** 	}
 866               	.LM122:
 867 024c 9598      		cbi 0x12,5
 868               	.L61:
 869               	.LBE124:
 870               	.LBE123:
  78:led.c         **** 	}
  79:led.c         **** 	else if(sd == 1)
  80:led.c         **** 	{
  81:led.c         **** 		/* Compensate for brighter leds */
  82:led.c         **** 		if(i == 0 || i == 2 || i == 4)
  83:led.c         **** 		{
  84:led.c         **** 			_led_clear_bright();
  85:led.c         **** 		}
  86:led.c         **** 	}
  87:led.c         **** 
  88:led.c         **** 	if(++sd == BRIGHTNESS_FACTOR)
 872               	.LM123:
 873 024e 8091 0000 		lds r24,sd.4
 874 0252 91E0      		ldi r25,lo8(1)
 875 0254 980F      		add r25,r24
 877               	.LM124:
 878 0256 8930      		cpi r24,lo8(9)
 879 0258 01F4      		brne .+2
 880 025a 00C0      		rjmp .L64
 881 025c 9093 0000 		sts sd.4,r25
 882               	.L65:
 883               	.LBE122:
 884               	.LBE121:
 885               	.LBB128:
 886               	.LBB129:
 888               	.Ltext21:
   1:alarm.c       **** typedef struct ALARM
   2:alarm.c       **** {
   3:alarm.c       **** 	uint8_t Minutes, Hours, Weekday;
   4:alarm.c       **** 	uint32_t Icon;
   5:alarm.c       **** } Alarm;
   6:alarm.c       **** 
   7:alarm.c       **** static volatile uint8_t _alarms_count;
   8:alarm.c       **** static volatile Alarm _alarms[6], *_alarm_cur;
   9:alarm.c       **** 
  10:alarm.c       **** #define DELAY_SHORT  1100
  11:alarm.c       **** #define DELAY_LONG  15000
  12:alarm.c       **** 
  13:alarm.c       **** static void alarm_update(void)
  14:alarm.c       **** {
  15:alarm.c       **** 	if(_mode == MODE_ALARM)
 890               	.LM125:
 891 0260 8091 0000 		lds r24,_mode
 893               	.LM126:
 894 0264 8330      		cpi r24,lo8(3)
 895 0266 01F0      		breq .+2
 896 0268 00C0      		rjmp .L68
 897               	.LBB130:
  16:alarm.c       **** 	{
  17:alarm.c       **** 		static uint16_t delay = DELAY_SHORT, cnt = 0;
  18:alarm.c       **** 		static uint8_t i;
  19:alarm.c       **** 
  20:alarm.c       **** 		if(++cnt == delay)
 899               	.LM127:
 900 026a 8091 0000 		lds r24,cnt.2
 901 026e 9091 0000 		lds r25,cnt.2+1
 902 0272 0196      		adiw r24,1
 904               	.LM128:
 905 0274 9093 0000 		sts cnt.2+1,r25
 906 0278 8093 0000 		sts cnt.2,r24
 907 027c 2091 0000 		lds r18,delay.1
 908 0280 3091 0000 		lds r19,delay.1+1
 909 0284 8217      		cp r24,r18
 910 0286 9307      		cpc r25,r19
 911 0288 01F4      		brne .L28
  21:alarm.c       **** 		{
  22:alarm.c       **** 			cnt = 0;
 913               	.LM129:
 914 028a 1092 0000 		sts cnt.2+1,__zero_reg__
 915 028e 1092 0000 		sts cnt.2,__zero_reg__
  23:alarm.c       **** 
  24:alarm.c       **** 			if((i & 1) == 1)
 917               	.LM130:
 918 0292 8091 0000 		lds r24,i.0
 920               	.LM131:
 921 0296 80FF      		sbrs r24,0
 922 0298 00C0      		rjmp .L71
  25:alarm.c       **** 			{
  26:alarm.c       **** 				_beep = 1;
 924               	.LM132:
 925 029a 91E0      		ldi r25,lo8(1)
 926 029c 9093 0000 		sts _beep,r25
  27:alarm.c       **** 				_display = _alarm_cur->Icon;
 928               	.LM133:
 929 02a0 E091 0000 		lds r30,_alarm_cur
 930 02a4 F091 0000 		lds r31,_alarm_cur+1
 931 02a8 4381      		ldd r20,Z+3
 932 02aa 5481      		ldd r21,Z+4
 933 02ac 6581      		ldd r22,Z+5
 934 02ae 7681      		ldd r23,Z+6
 935               	.L72:
 937               	.LM134:
 938 02b0 4093 0000 		sts _display,r20
 939 02b4 5093 0000 		sts _display+1,r21
 940 02b8 6093 0000 		sts _display+2,r22
 941 02bc 7093 0000 		sts _display+3,r23
  28:alarm.c       **** 			}
  29:alarm.c       **** 			else
  30:alarm.c       **** 			{
  31:alarm.c       **** 				_beep = 0;
  32:alarm.c       **** 				_display = 0;
  33:alarm.c       **** 			}
  34:alarm.c       **** 
  35:alarm.c       **** 			if(i == 7)
 943               	.LM135:
 944 02c0 8730      		cpi r24,lo8(7)
 945 02c2 01F4      		brne .L73
  36:alarm.c       **** 			{
  37:alarm.c       **** 				delay = DELAY_LONG;
 947               	.LM136:
 948 02c4 28E9      		ldi r18,lo8(-104)
 949 02c6 3AE3      		ldi r19,lo8(58)
 950 02c8 3093 0000 		sts delay.1+1,r19
 951 02cc 2093 0000 		sts delay.1,r18
  38:alarm.c       **** 				_beep = 0;
 953               	.LM137:
 954 02d0 1092 0000 		sts _beep,__zero_reg__
 955               	.L73:
  39:alarm.c       **** 			}
  40:alarm.c       **** 
  41:alarm.c       **** 			if(++i == 9)
 957               	.LM138:
 958 02d4 8F5F      		subi r24,lo8(-(1))
 960               	.LM139:
 961 02d6 8093 0000 		sts i.0,r24
 962 02da 8930      		cpi r24,lo8(9)
 963 02dc 01F4      		brne .L28
  42:alarm.c       **** 			{
  43:alarm.c       **** 				delay = DELAY_SHORT;
 965               	.LM140:
 966 02de 8CE4      		ldi r24,lo8(76)
 967 02e0 94E0      		ldi r25,lo8(4)
 968 02e2 9093 0000 		sts delay.1+1,r25
 969 02e6 8093 0000 		sts delay.1,r24
  44:alarm.c       **** 				i = 0;
 971               	.LM141:
 972 02ea 1092 0000 		sts i.0,__zero_reg__
 973               	.L28:
 974               	/* epilogue start */
 975               	.LBE130:
 976               	.LBE129:
 977               	.LBE128:
 979               	.Ltext22:
 100:main.c        **** 	{
 101:main.c        **** 		scroll_update();
 102:main.c        **** 	}
 103:main.c        **** 
 104:main.c        **** 	timer_update();
 105:main.c        **** 	piezo_update();
 106:main.c        **** 	button_update();
 107:main.c        **** 	led_update();
 108:main.c        **** 	alarm_update();
 109:main.c        **** }
 981               	.LM142:
 982 02ee CB5F      		subi r28,lo8(-(5))
 983 02f0 CDBF      		out __SP_L__,r28
 984 02f2 DF91      		pop r29
 985 02f4 CF91      		pop r28
 986 02f6 FF91      		pop r31
 987 02f8 EF91      		pop r30
 988 02fa BF91      		pop r27
 989 02fc AF91      		pop r26
 990 02fe 9F91      		pop r25
 991 0300 8F91      		pop r24
 992 0302 7F91      		pop r23
 993 0304 6F91      		pop r22
 994 0306 5F91      		pop r21
 995 0308 4F91      		pop r20
 996 030a 3F91      		pop r19
 997 030c 2F91      		pop r18
 998 030e 1F91      		pop r17
 999 0310 0F91      		pop r16
 1000 0312 FF90      		pop r15
 1001 0314 EF90      		pop r14
 1002 0316 DF90      		pop r13
 1003 0318 CF90      		pop r12
 1004 031a BF90      		pop r11
 1005 031c AF90      		pop r10
 1006 031e 9F90      		pop r9
 1007 0320 8F90      		pop r8
 1008 0322 7F90      		pop r7
 1009 0324 6F90      		pop r6
 1010 0326 0F90      		pop r0
 1011 0328 0FBE      		out __SREG__,r0
 1012 032a 0F90      		pop r0
 1013 032c 1F90      		pop r1
 1014 032e 1895      		reti
 1015               	.L31:
 1016               	.LBB134:
 1017               	.LBB83:
 1019               	.Ltext23:
  11:clock.c       **** 
 1021               	.LM143:
 1022 0330 1092 0000 		sts _cnt.6+1,__zero_reg__
 1023 0334 1092 0000 		sts _cnt.6,__zero_reg__
  13:clock.c       **** 	{
 1025               	.LM144:
 1026 0338 2091 0000 		lds r18,_cur
  13:clock.c       **** 	{
 1028               	.LM145:
 1029 033c 2430      		cpi r18,lo8(4)
 1030 033e 00F0      		brlo .+2
 1031 0340 00C0      		rjmp .L33
 1032               	.LBB76:
  16:clock.c       **** 		o = pgm_read_byte(&_map[v]);
 1034               	.LM146:
 1035 0342 E22F      		mov r30,r18
 1036 0344 F0E0      		ldi r31,0
  16:clock.c       **** 		o = pgm_read_byte(&_map[v]);
 1038               	.LM147:
 1039 0346 E050      		subi r30,lo8(-(_buf))
 1040 0348 F040      		sbci r31,hi8(-(_buf))
 1041 034a 8081      		ld r24,Z
 1042               	.LBB77:
  17:clock.c       **** 		w = pgm_read_byte(&_map[v + 1]) - o;
 1044               	.LM148:
 1045 034c 90E0      		ldi r25,0
 1046 034e FC01      		movw r30,r24
 1047 0350 E050      		subi r30,lo8(-(_map))
 1048 0352 F040      		sbci r31,hi8(-(_map))
 1049               	/* #APP */
 1050               	 ;  17 "clock.c" 1
 1051 0354 3491      		lpm r19, Z
 1052               		
 1053               	 ;  0 "" 2
 1054               	/* #NOAPP */
 1055               	.LBE77:
 1056               	.LBB78:
  18:clock.c       **** 		for(i = 0; i < 5; ++i)
 1058               	.LM149:
 1059 0356 8050      		subi r24,lo8(-(_map+1))
 1060 0358 9040      		sbci r25,hi8(-(_map+1))
 1061 035a FC01      		movw r30,r24
 1062               	/* #APP */
 1063               	 ;  18 "clock.c" 1
 1064 035c 8491      		lpm r24, Z
 1065               		
 1066               	 ;  0 "" 2
 1067               	/* #NOAPP */
 1068               	.LBE78:
  18:clock.c       **** 		for(i = 0; i < 5; ++i)
 1070               	.LM150:
 1071 035e F82E      		mov r15,r24
 1072 0360 F31A      		sub r15,r19
  21:clock.c       **** 		}
 1074               	.LM151:
 1075 0362 1982      		std Y+1,__zero_reg__
 1076 0364 1A82      		std Y+2,__zero_reg__
 1077 0366 1B82      		std Y+3,__zero_reg__
 1078 0368 1C82      		std Y+4,__zero_reg__
 1079 036a 1D82      		std Y+5,__zero_reg__
  24:clock.c       **** 		{
 1081               	.LM152:
 1082 036c 922F      		mov r25,r18
 1083 036e 9170      		andi r25,lo8(1)
 1084 0370 20FF      		sbrs r18,0
 1085 0372 00C0      		rjmp .L34
  26:clock.c       **** 		}
 1087               	.LM153:
 1088 0374 95E0      		ldi r25,lo8(5)
 1089 0376 930F      		add r25,r19
 1090 0378 981B      		sub r25,r24
 1091               	.L34:
 1092 037a E32F      		mov r30,r19
 1093 037c F0E0      		ldi r31,0
 1094 037e E050      		subi r30,lo8(-(_font))
 1095 0380 F040      		sbci r31,hi8(-(_font))
 1096 0382 492F      		mov r20,r25
 1097 0384 50E0      		ldi r21,0
 1098               	.LBB79:
  36:clock.c       **** 				}
 1100               	.LM154:
 1101 0386 EE24      		clr r14
 1102 0388 E394      		inc r14
 1103               	.L35:
 1104               	.LBE79:
  29:clock.c       **** 		{
 1106               	.LM155:
 1107 038a 842F      		mov r24,r20
 1108 038c 891B      		sub r24,r25
 1109 038e 8F15      		cp r24,r15
 1110 0390 00F4      		brsh .+2
 1111 0392 00C0      		rjmp .L38
  43:clock.c       **** 			((uint32_t)(lines[2]) << 10UL) |
 1113               	.LM156:
 1114 0394 8A81      		ldd r24,Y+2
 1115 0396 90E0      		ldi r25,0
 1116 0398 B0E0      		ldi r27,0
 1117 039a A0E0      		ldi r26,0
  43:clock.c       **** 			((uint32_t)(lines[2]) << 10UL) |
 1119               	.LM157:
 1120 039c 15E0      		ldi r17,5
 1121               		1:
 1122 039e 880F      		lsl r24
 1123 03a0 991F      		rol r25
 1124 03a2 AA1F      		rol r26
 1125 03a4 BB1F      		rol r27
 1126 03a6 1A95      		dec r17
 1127 03a8 01F4      		brne 1b
  44:clock.c       **** 			((uint32_t)(lines[3]) << 15UL) |
 1129               	.LM158:
 1130 03aa 4B81      		ldd r20,Y+3
 1131 03ac 50E0      		ldi r21,0
 1132 03ae 70E0      		ldi r23,0
 1133 03b0 60E0      		ldi r22,0
  44:clock.c       **** 			((uint32_t)(lines[3]) << 15UL) |
 1135               	.LM159:
 1136 03b2 0AE0      		ldi r16,10
 1137               		1:
 1138 03b4 440F      		lsl r20
 1139 03b6 551F      		rol r21
 1140 03b8 661F      		rol r22
 1141 03ba 771F      		rol r23
 1142 03bc 0A95      		dec r16
 1143 03be 01F4      		brne 1b
  43:clock.c       **** 			((uint32_t)(lines[2]) << 10UL) |
 1145               	.LM160:
 1146 03c0 842B      		or r24,r20
 1147 03c2 952B      		or r25,r21
 1148 03c4 A62B      		or r26,r22
 1149 03c6 B72B      		or r27,r23
  42:clock.c       **** 			((uint32_t)(lines[1]) <<  5UL) |
 1151               	.LM161:
 1152 03c8 3981      		ldd r19,Y+1
  43:clock.c       **** 			((uint32_t)(lines[2]) << 10UL) |
 1154               	.LM162:
 1155 03ca 832B      		or r24,r19
  45:clock.c       **** 			((uint32_t)(lines[4]) << 20UL);
 1157               	.LM163:
 1158 03cc 4C81      		ldd r20,Y+4
 1159 03ce 50E0      		ldi r21,0
 1160 03d0 70E0      		ldi r23,0
 1161 03d2 60E0      		ldi r22,0
  45:clock.c       **** 			((uint32_t)(lines[4]) << 20UL);
 1163               	.LM164:
 1164 03d4 3FE0      		ldi r19,15
 1165               		1:
 1166 03d6 440F      		lsl r20
 1167 03d8 551F      		rol r21
 1168 03da 661F      		rol r22
 1169 03dc 771F      		rol r23
 1170 03de 3A95      		dec r19
 1171 03e0 01F4      		brne 1b
  44:clock.c       **** 			((uint32_t)(lines[3]) << 15UL) |
 1173               	.LM165:
 1174 03e2 842B      		or r24,r20
 1175 03e4 952B      		or r25,r21
 1176 03e6 A62B      		or r26,r22
 1177 03e8 B72B      		or r27,r23
  46:clock.c       **** 	}
 1179               	.LM166:
 1180 03ea 4D81      		ldd r20,Y+5
 1181 03ec 50E0      		ldi r21,0
 1182 03ee 70E0      		ldi r23,0
 1183 03f0 60E0      		ldi r22,0
  46:clock.c       **** 	}
 1185               	.LM167:
 1186 03f2 E4E1      		ldi r30,20
 1187               		1:
 1188 03f4 440F      		lsl r20
 1189 03f6 551F      		rol r21
 1190 03f8 661F      		rol r22
 1191 03fa 771F      		rol r23
 1192 03fc EA95      		dec r30
 1193 03fe 01F4      		brne 1b
  45:clock.c       **** 			((uint32_t)(lines[4]) << 20UL);
 1195               	.LM168:
 1196 0400 842B      		or r24,r20
 1197 0402 952B      		or r25,r21
 1198 0404 A62B      		or r26,r22
 1199 0406 B72B      		or r27,r23
  41:clock.c       **** 			((uint32_t)(lines[0]) <<  0UL) |
 1201               	.LM169:
 1202 0408 8093 0000 		sts _display,r24
 1203 040c 9093 0000 		sts _display+1,r25
 1204 0410 A093 0000 		sts _display+2,r26
 1205 0414 B093 0000 		sts _display+3,r27
 1206               	.L33:
 1207               	.LBE76:
  49:clock.c       **** 	{
 1209               	.LM170:
 1210 0418 2F5F      		subi r18,lo8(-(1))
  49:clock.c       **** 	{
 1212               	.LM171:
 1213 041a 2093 0000 		sts _cur,r18
 1214 041e 2530      		cpi r18,lo8(5)
 1215 0420 01F0      		breq .+2
 1216 0422 00C0      		rjmp .L30
  51:clock.c       **** 	}
 1218               	.LM172:
 1219 0424 00D0      		rcall mode_idle
 1220 0426 00C0      		rjmp .L30
 1221               	.L38:
 1222               	.LBB82:
 1223               	.LBB81:
 1224               	.LBB80:
  31:clock.c       **** 			for(j = 0; j < 5; ++j)
 1226               	.LM173:
 1227               	/* #APP */
 1228               	 ;  31 "clock.c" 1
 1229 0428 0491      		lpm r16, Z
 1230               		
 1231               	 ;  0 "" 2
 1232               	/* #NOAPP */
 1233 042a 8E2D      		mov r24,r14
 1234 042c 042E      		mov r0,r20
 1235 042e 00C0      		rjmp 2f
 1236               		1:
 1237 0430 880F      		lsl r24
 1238               		2:
 1239 0432 0A94      		dec r0
 1240 0434 02F4      		brpl 1b
 1241 0436 DE01      		movw r26,r28
 1242 0438 1196      		adiw r26,1
 1243               	.LBE80:
  36:clock.c       **** 				}
 1245               	.LM174:
 1246 043a 70E0      		ldi r23,0
 1247 043c 60E0      		ldi r22,0
  34:clock.c       **** 				{
 1249               	.LM175:
 1250 043e 10E0      		ldi r17,0
 1251               	.L37:
 1252 0440 6801      		movw r12,r16
 1253 0442 062E      		mov r0,r22
 1254 0444 00C0      		rjmp 2f
 1255               		1:
 1256 0446 D594      		asr r13
 1257 0448 C794      		ror r12
 1258               		2:
 1259 044a 0A94      		dec r0
 1260 044c 02F4      		brpl 1b
  34:clock.c       **** 				{
 1262               	.LM176:
 1263 044e C0FE      		sbrs r12,0
 1264 0450 00C0      		rjmp .L36
  36:clock.c       **** 				}
 1266               	.LM177:
 1267 0452 1496      		adiw r26,4
 1268 0454 3C91      		ld r19,X
 1269 0456 1497      		sbiw r26,4
 1270 0458 382B      		or r19,r24
 1271 045a 1496      		adiw r26,4
 1272 045c 3C93      		st X,r19
 1273 045e 1497      		sbiw r26,4
 1274               	.L36:
  32:clock.c       **** 			{
 1276               	.LM178:
 1277 0460 6F5F      		subi r22,-1
 1278 0462 7F4F      		sbci r23,-1
 1279 0464 1197      		sbiw r26,1
 1280 0466 6530      		cpi r22,5
 1281 0468 7105      		cpc r23,__zero_reg__
 1282 046a 01F4      		brne .L37
 1283 046c 3196      		adiw r30,1
 1284 046e 4F5F      		subi r20,-1
 1285 0470 5F4F      		sbci r21,-1
 1286 0472 00C0      		rjmp .L35
 1287               	.L39:
 1288               	.LBE81:
 1289               	.LBE82:
 1290               	.LBE83:
 1291               	.LBE134:
 1292               	.LBB135:
 1293               	.LBB86:
 1295               	.Ltext24:
  24:timer.c       **** 	{
  25:timer.c       **** 		return;
  26:timer.c       **** 	}
  27:timer.c       **** 
  28:timer.c       **** 	_ticks = 0;
 1297               	.LM179:
 1298 0474 1092 0000 		sts _ticks+1,__zero_reg__
 1299 0478 1092 0000 		sts _ticks,__zero_reg__
  29:timer.c       **** 
  30:timer.c       **** 	if(++_seconds == 60)
 1301               	.LM180:
 1302 047c 8091 0000 		lds r24,_seconds
 1303 0480 8F5F      		subi r24,lo8(-(1))
 1305               	.LM181:
 1306 0482 8093 0000 		sts _seconds,r24
 1307 0486 8C33      		cpi r24,lo8(60)
 1308 0488 01F0      		breq .+2
 1309 048a 00C0      		rjmp .L40
  31:timer.c       **** 	{
  32:timer.c       **** 		_seconds = 0;
 1311               	.LM182:
 1312 048c 1092 0000 		sts _seconds,__zero_reg__
  33:timer.c       **** 		if(++_minutes == 60)
 1314               	.LM183:
 1315 0490 8091 0000 		lds r24,_minutes
 1316 0494 8F5F      		subi r24,lo8(-(1))
 1318               	.LM184:
 1319 0496 8093 0000 		sts _minutes,r24
 1320 049a 8C33      		cpi r24,lo8(60)
 1321 049c 01F0      		breq .+2
 1322 049e 00C0      		rjmp .L40
  34:timer.c       **** 		{
  35:timer.c       **** 			_minutes = 0;
 1324               	.LM185:
 1325 04a0 1092 0000 		sts _minutes,__zero_reg__
  36:timer.c       **** 			if(++_hours == 24)
 1327               	.LM186:
 1328 04a4 8091 0000 		lds r24,_hours
 1329 04a8 8F5F      		subi r24,lo8(-(1))
 1331               	.LM187:
 1332 04aa 8093 0000 		sts _hours,r24
 1333 04ae 8831      		cpi r24,lo8(24)
 1334 04b0 01F0      		breq .+2
 1335 04b2 00C0      		rjmp .L40
  37:timer.c       **** 			{
  38:timer.c       **** 				_hours = 0;
 1337               	.LM188:
 1338 04b4 1092 0000 		sts _hours,__zero_reg__
  39:timer.c       **** 				if(++_weekday == 7)
 1340               	.LM189:
 1341 04b8 8091 0000 		lds r24,_weekday
 1342 04bc 8F5F      		subi r24,lo8(-(1))
 1344               	.LM190:
 1345 04be 8093 0000 		sts _weekday,r24
 1346 04c2 8730      		cpi r24,lo8(7)
 1347 04c4 01F0      		breq .+2
 1348 04c6 00C0      		rjmp .L40
  40:timer.c       **** 				{
  41:timer.c       **** 					_weekday = 0;
 1350               	.LM191:
 1351 04c8 1092 0000 		sts _weekday,__zero_reg__
 1352 04cc 00C0      		rjmp .L40
 1353               	.L43:
 1354               	.LBE86:
 1355               	.LBE135:
 1356               	.LBB136:
 1357               	.LBB91:
 1358               	.LBB90:
 1360               	.Ltext25:
  11:piezo.c       **** 		}
  12:piezo.c       **** 		else if(l == 8)
 1362               	.LM192:
 1363 04ce 8830      		cpi r24,lo8(8)
 1364 04d0 01F0      		breq .+2
 1365 04d2 00C0      		rjmp .L42
  13:piezo.c       **** 		{
  14:piezo.c       **** 			PORTD &= ~(1 << 4);
 1367               	.LM193:
 1368 04d4 9498      		cbi 0x12,4
 1369 04d6 00C0      		rjmp .L42
 1370               	.L46:
 1371               	.LBE90:
 1372               	.LBE91:
 1373               	.LBE136:
 1374               	.LBB137:
 1375               	.LBB120:
 1377               	.Ltext26:
  24:button.c      **** 			{
 1379               	.LM194:
 1380 04d8 8E3E      		cpi r24,-18
 1381 04da 9240      		sbci r25,2
 1382 04dc 01F0      		breq .+2
 1383 04de 00C0      		rjmp .L47
 1385               	.LM195:
 1386 04e0 F182      		std Z+1,r15
 1387 04e2 E082      		st Z,r14
 1388               	.LBB119:
 1389               	.LBB118:
 1391               	.Ltext27:
 110:main.c        **** 
 111:main.c        **** static void mode_idle_button(uint8_t button)
 112:main.c        **** {
 113:main.c        **** 	switch(button)
 114:main.c        **** 	{
 115:main.c        **** 		case 0:
 116:main.c        **** 			mode_clock();
 117:main.c        **** 			break;
 118:main.c        **** 
 119:main.c        **** 		case 3:
 120:main.c        **** 			mode_uart();
 121:main.c        **** 			break;
 122:main.c        **** 	}
 123:main.c        **** }
 124:main.c        **** 
 125:main.c        **** static void button_event(uint8_t button)
 126:main.c        **** {
 127:main.c        **** 	switch(_mode)
 1393               	.LM196:
 1394 04e4 8091 0000 		lds r24,_mode
 1395 04e8 8230      		cpi r24,lo8(2)
 1396 04ea 01F0      		breq .L48
 1397 04ec 00F4      		brsh .L49
 1398 04ee 8823      		tst r24
 1399 04f0 01F0      		breq .L50
 1400               	.L110:
 1401               	.LBB111:
 1402               	.LBB112:
 1404               	.Ltext28:
  61:uart.c        **** }
  62:uart.c        **** 
  63:uart.c        **** static void mode_uart_button(void)
  64:uart.c        **** {
  65:uart.c        **** 	UCSRB = 0;
  66:uart.c        **** 	button_init();
  67:uart.c        **** 	mode_idle();
 1406               	.LM197:
 1407 04f2 00D0      		rcall mode_idle
  68:uart.c        **** }
 1409               	.LM198:
 1410 04f4 00C0      		rjmp .L47
 1411               	.L49:
 1412               	.LBE112:
 1413               	.LBE111:
 1415               	.Ltext29:
 1417               	.LM199:
 1418 04f6 8330      		cpi r24,lo8(3)
 1419 04f8 01F0      		breq .L110
 1420 04fa 00C0      		rjmp .L47
 1421               	.L50:
 1422               	.LBB116:
 1423               	.LBB110:
 113:main.c        **** 	{
 1425               	.LM200:
 1426 04fc 1123      		tst r17
 1427 04fe 01F0      		breq .L52
 1428 0500 1330      		cpi r17,lo8(3)
 1429 0502 01F0      		breq .+2
 1430 0504 00C0      		rjmp .L47
 1431               	.LBB108:
 1432               	.LBB107:
 1434               	.Ltext30:
  52:uart.c        **** 		(0b01000UL <<  0UL) |
 1436               	.LM201:
 1437 0506 8092 0000 		sts _display,r8
 1438 050a 7092 0000 		sts _display+1,r7
 1439 050e 6092 0000 		sts _display+2,r6
 1440 0512 1092 0000 		sts _display+3,__zero_reg__
 1441               	.LBB106:
 1442               	.LBB105:
   9:uart.c        **** 
 1444               	.LM202:
 1445 0516 82B3      		in r24,0x12
 1446 0518 8C7F      		andi r24,lo8(-4)
 1447 051a 82BB      		out 0x12,r24
  11:uart.c        **** 	UCSRC = (1 << UCSZ1) | (1 << UCSZ0);
 1449               	.LM203:
 1450 051c CAB8      		out 0xa,r12
  12:uart.c        **** 	UBRRL = (uint8_t)(_BAUD & 0xFF);
 1452               	.LM204:
 1453 051e B3B8      		out 0x3,r11
  13:uart.c        **** 	UBRRH = (uint8_t)((_BAUD >> 8) & 0xFF);
 1455               	.LM205:
 1456 0520 A9B8      		out 0x9,r10
  14:uart.c        **** 
 1458               	.LM206:
 1459 0522 12B8      		out 0x2,__zero_reg__
  16:uart.c        **** }
 1461               	.LM207:
 1462 0524 80E0      		ldi r24,lo8(__c.5)
 1463 0526 90E0      		ldi r25,hi8(__c.5)
 1464 0528 00D0      		rcall uart_tx_str_P
 1465               	.LBE105:
 1466               	.LBE106:
  60:uart.c        **** }
 1468               	.LM208:
 1469 052a 9092 0000 		sts _mode,r9
  61:uart.c        **** 
 1471               	.LM209:
 1472 052e 00C0      		rjmp .L47
 1473               	.L52:
 1474               	.LBE107:
 1475               	.LBE108:
 1476               	.LBB109:
 1477               	.LBB100:
 1479               	.Ltext31:
  57:clock.c       **** 	_buf[1] = _hours % 10;
 1481               	.LM210:
 1482 0530 8091 0000 		lds r24,_hours
 1483 0534 602F      		mov r22,r16
 1484 0536 00D0      		rcall __udivmodqi4
 1485 0538 8093 0000 		sts _buf,r24
  58:clock.c       **** 	_buf[2] = _minutes / 10;
 1487               	.LM211:
 1488 053c 8091 0000 		lds r24,_hours
 1489 0540 00D0      		rcall __udivmodqi4
 1490 0542 9093 0000 		sts _buf+1,r25
  59:clock.c       **** 	_buf[3] = _minutes % 10;
 1492               	.LM212:
 1493 0546 8091 0000 		lds r24,_minutes
 1494 054a 00D0      		rcall __udivmodqi4
 1495 054c 8093 0000 		sts _buf+2,r24
  60:clock.c       **** 	_cur = 0;
 1497               	.LM213:
 1498 0550 8091 0000 		lds r24,_minutes
 1499 0554 00D0      		rcall __udivmodqi4
 1500 0556 9093 0000 		sts _buf+3,r25
  61:clock.c       **** 	_mode = MODE_CLOCK;
 1502               	.LM214:
 1503 055a 1092 0000 		sts _cur,__zero_reg__
 1505               	.LM215:
 1506 055e D092 0000 		sts _mode,r13
  63:clock.c       **** }
 1508               	.LM216:
 1509 0562 00C0      		rjmp .L47
 1510               	.L48:
 1511               	.LBE100:
 1512               	.LBE109:
 1513               	.LBE110:
 1514               	.LBE116:
 1515               	.LBB117:
 1516               	.LBB115:
 1518               	.Ltext32:
  65:uart.c        **** 	button_init();
 1520               	.LM217:
 1521 0564 1AB8      		out 0xa,__zero_reg__
 1522               	.LBB113:
 1523               	.LBB114:
 1525               	.Ltext33:
  10:button.c      **** }
 1527               	.LM218:
 1528 0566 82B3      		in r24,0x12
 1529 0568 8F60      		ori r24,lo8(15)
 1530 056a 82BB      		out 0x12,r24
 1531 056c 00C0      		rjmp .L110
 1532               	.L45:
 1533               	.LBE114:
 1534               	.LBE113:
 1535               	.LBE115:
 1536               	.LBE117:
 1537               	.LBE118:
 1538               	.LBE119:
  27:button.c      **** 				button_event(i);
  28:button.c      **** 			}
  29:button.c      **** 		}
  30:button.c      **** 		else
  31:button.c      **** 		{
  32:button.c      **** 			button_ticks[i] = 0;
 1540               	.LM219:
 1541 056e 1182      		std Z+1,__zero_reg__
 1542 0570 1082      		st Z,__zero_reg__
 1543 0572 00C0      		rjmp .L47
 1544               	.L55:
 1545               	.LBE120:
 1546               	.LBE137:
 1547               	.LBB138:
 1548               	.LBB127:
 1550               	.Ltext34:
  79:led.c         **** 	{
 1552               	.LM220:
 1553 0574 8130      		cpi r24,lo8(1)
 1554 0576 01F0      		breq .+2
 1555 0578 00C0      		rjmp .L61
  82:led.c         **** 		{
 1557               	.LM221:
 1558 057a 8091 0000 		lds r24,i.3
  82:led.c         **** 		{
 1560               	.LM222:
 1561 057e 982F      		mov r25,r24
 1562 0580 9D7F      		andi r25,lo8(-3)
 1563 0582 01F0      		breq .L63
  82:led.c         **** 		{
 1565               	.LM223:
 1566 0584 8430      		cpi r24,lo8(4)
 1567 0586 01F0      		breq .+2
 1568 0588 00C0      		rjmp .L61
 1569               	.L63:
 1570               	.LBB125:
 1571               	.LBB126:
  66:led.c         **** 	PORTB |= (1 << 0);
 1573               	.LM224:
 1574 058a C29A      		sbi 0x18,2
  67:led.c         **** 	PORTD |= (1 << 5);
 1576               	.LM225:
 1577 058c C09A      		sbi 0x18,0
  68:led.c         **** }
 1579               	.LM226:
 1580 058e 959A      		sbi 0x12,5
  69:led.c         **** 
 1582               	.LM227:
 1583 0590 00C0      		rjmp .L61
 1584               	.L64:
 1585               	.LBE126:
 1586               	.LBE125:
  89:led.c         **** 	{
  90:led.c         **** 		sd = 0;
 1588               	.LM228:
 1589 0592 1092 0000 		sts sd.4,__zero_reg__
  91:led.c         **** 		if(++i == 5)
 1591               	.LM229:
 1592 0596 8091 0000 		lds r24,i.3
 1593 059a 91E0      		ldi r25,lo8(1)
 1594 059c 980F      		add r25,r24
 1596               	.LM230:
 1597 059e 8430      		cpi r24,lo8(4)
 1598 05a0 01F0      		breq .L66
 1599 05a2 9093 0000 		sts i.3,r25
 1600 05a6 00C0      		rjmp .L65
 1601               	.L66:
  92:led.c         **** 		{
  93:led.c         **** 			i = 0;
 1603               	.LM231:
 1604 05a8 1092 0000 		sts i.3,__zero_reg__
 1605 05ac 00C0      		rjmp .L65
 1606               	.L71:
 1607               	.LBE127:
 1608               	.LBE138:
 1609               	.LBB139:
 1610               	.LBB133:
 1611               	.LBB131:
 1613               	.Ltext35:
  31:alarm.c       **** 				_display = 0;
 1615               	.LM232:
 1616 05ae 1092 0000 		sts _beep,__zero_reg__
 1617 05b2 40E0      		ldi r20,0
 1618 05b4 50E0      		ldi r21,0
 1619 05b6 BA01      		movw r22,r20
 1620 05b8 00C0      		rjmp .L72
 1621               	.L68:
 1622               	.LBE131:
  45:alarm.c       **** 			}
  46:alarm.c       **** 		}
  47:alarm.c       **** 	}
  48:alarm.c       **** 	else if(_seconds == 0 && _ticks == 0)
 1624               	.LM233:
 1625 05ba 8091 0000 		lds r24,_seconds
 1627               	.LM234:
 1628 05be 8111      		cpse r24,__zero_reg__
 1629 05c0 00C0      		rjmp .L28
 1631               	.LM235:
 1632 05c2 8091 0000 		lds r24,_ticks
 1633 05c6 9091 0000 		lds r25,_ticks+1
 1634 05ca 892B      		or r24,r25
 1635 05cc 01F0      		breq .+2
 1636 05ce 00C0      		rjmp .L28
 1637               	.LBB132:
  49:alarm.c       **** 	{
  50:alarm.c       **** 		volatile Alarm *a = &_alarms[_alarms_count - 1];
 1639               	.LM236:
 1640 05d0 8091 0000 		lds r24,_alarms_count
 1642               	.LM237:
 1643 05d4 8150      		subi r24,1
 1644 05d6 990B      		sbc r25,r25
 1645 05d8 67E0      		ldi r22,lo8(7)
 1646 05da 70E0      		ldi r23,0
 1647 05dc 00D0      		rcall __mulhi3
 1648 05de FC01      		movw r30,r24
 1649 05e0 E050      		subi r30,lo8(-(_alarms))
 1650 05e2 F040      		sbci r31,hi8(-(_alarms))
 1651               	.L75:
  51:alarm.c       **** 		while(a >= _alarms)
 1653               	.LM238:
 1654 05e4 80E0      		ldi r24,hi8(_alarms)
 1655 05e6 E030      		cpi r30,lo8(_alarms)
 1656 05e8 F807      		cpc r31,r24
 1657 05ea 00F4      		brsh .+2
 1658 05ec 00C0      		rjmp .L28
  52:alarm.c       **** 		{
  53:alarm.c       **** 			if(a->Minutes == _minutes &&
 1660               	.LM239:
 1661 05ee 9081      		ld r25,Z
 1663               	.LM240:
 1664 05f0 8091 0000 		lds r24,_minutes
 1666               	.LM241:
 1667 05f4 9813      		cpse r25,r24
 1668 05f6 00C0      		rjmp .L76
  54:alarm.c       **** 				a->Hours == _hours &&
 1670               	.LM242:
 1671 05f8 9181      		ldd r25,Z+1
 1673               	.LM243:
 1674 05fa 8091 0000 		lds r24,_hours
  53:alarm.c       **** 				a->Hours == _hours &&
 1676               	.LM244:
 1677 05fe 9813      		cpse r25,r24
 1678 0600 00C0      		rjmp .L76
  55:alarm.c       **** 				a->Weekday == _weekday)
 1680               	.LM245:
 1681 0602 9281      		ldd r25,Z+2
 1683               	.LM246:
 1684 0604 8091 0000 		lds r24,_weekday
  54:alarm.c       **** 				a->Hours == _hours &&
 1686               	.LM247:
 1687 0608 9813      		cpse r25,r24
 1688 060a 00C0      		rjmp .L76
  56:alarm.c       **** 			{
  57:alarm.c       **** 				_alarm_cur = a;
 1690               	.LM248:
 1691 060c F093 0000 		sts _alarm_cur+1,r31
 1692 0610 E093 0000 		sts _alarm_cur,r30
  58:alarm.c       **** 				_mode = MODE_ALARM;
 1694               	.LM249:
 1695 0614 83E0      		ldi r24,lo8(3)
 1696 0616 8093 0000 		sts _mode,r24
  59:alarm.c       **** 				break;
 1698               	.LM250:
 1699 061a 00C0      		rjmp .L28
 1700               	.L76:
  60:alarm.c       **** 			}
  61:alarm.c       **** 
  62:alarm.c       **** 			--a;
 1702               	.LM251:
 1703 061c 3797      		sbiw r30,7
 1704 061e 00C0      		rjmp .L75
 1705               	.LBE132:
 1706               	.LBE133:
 1707               	.LBE139:
 1744               	.Lscope6:
 1746               		.local	i.0
 1747               		.comm	i.0,1,1
 1749               		.data
 1752               	delay.1:
 1753 0000 4C04      		.word	1100
 1755               		.local	cnt.2
 1756               		.comm	cnt.2,2,1
 1758               		.local	i.3
 1759               		.comm	i.3,1,1
 1761               		.local	sd.4
 1762               		.comm	sd.4,1,1
 1764               		.section	.progmem.data,"a",@progbits
 1767               	__c.5:
 1768 0000 5244 590A 		.string	"RDY\n"
 1768      00
 1770               		.local	_cnt.6
 1771               		.comm	_cnt.6,2,1
 1775               	__c.7:
 1776 0005 4143 4B0A 		.string	"ACK\n"
 1776      00
 1778               		.local	_alarm_cur
 1779               		.comm	_alarm_cur,2,1
 1781               		.local	_alarms
 1782               		.comm	_alarms,42,1
 1784               		.local	_alarms_count
 1785               		.comm	_alarms_count,1,1
 1787               		.local	_buf
 1788               		.comm	_buf,4,1
 1790               		.local	_cur
 1791               		.comm	_cur,1,1
 1795               	_map:
 1796 000a 00        		.string	""
 1797 000b 0306 0A0D 		.ascii	"\003\006\n\r\020\023\026\031\034\037"
 1797      1013 1619 
 1797      1C1F 
 1801               	_font:
 1802 0015 1F11 1F12 		.ascii	"\037\021\037\022\037\020\022\031\025\022\025\025\037\007\004"
 1802      1F10 1219 
 1802      1512 1515 
 1802      1F07 04
 1803 0024 1F17 151D 		.ascii	"\037\027\025\035\037\025\035\001\001\037\037\025\037\027\025"
 1803      1F15 1D01 
 1803      011F 1F15 
 1803      1F17 15
 1804 0033 1F        		.ascii	"\037"
 1806               		.local	button_ticks
 1807               		.comm	button_ticks,8,1
 1809               		.local	_mode
 1810               		.comm	_mode,1,1
 1812               		.local	_beep
 1813               		.comm	_beep,1,1
 1815               		.local	_weekday
 1816               		.comm	_weekday,1,1
 1818               		.local	_hours
 1819               		.comm	_hours,1,1
 1821               		.local	_minutes
 1822               		.comm	_minutes,1,1
 1824               		.local	_seconds
 1825               		.comm	_seconds,1,1
 1827               		.local	_ticks
 1828               		.comm	_ticks,2,1
 1830               		.local	_display
 1831               		.comm	_display,4,1
 1833               		.text
 1835               	.Letext0:
 1836               		.ident	"GCC: (GNU) 11.2.0"
 1837               	.global __do_copy_data
 1838               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccycgN0U.s:2      *ABS*:000000000000003d __SP_L__
     /tmp/ccycgN0U.s:3      *ABS*:000000000000003f __SREG__
     /tmp/ccycgN0U.s:4      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccycgN0U.s:5      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccycgN0U.s:14     .text:0000000000000000 mode_idle
     /tmp/ccycgN0U.s:1807   .bss:0000000000000041 _mode
     /tmp/ccycgN0U.s:1810   .bss:0000000000000042 _beep
     /tmp/ccycgN0U.s:1828   .bss:0000000000000049 _display
     /tmp/ccycgN0U.s:47     .text:000000000000001a uart_tx_str_P
     /tmp/ccycgN0U.s:100    .text:000000000000002e get_digit
     /tmp/ccycgN0U.s:136    .text:0000000000000038 parse_digits
     /tmp/ccycgN0U.s:177    .text.startup:0000000000000000 main
     /tmp/ccycgN0U.s:1813   .bss:0000000000000043 _weekday
     /tmp/ccycgN0U.s:1816   .bss:0000000000000044 _hours
     /tmp/ccycgN0U.s:1819   .bss:0000000000000045 _minutes
     /tmp/ccycgN0U.s:1782   .bss:0000000000000033 _alarms_count
     /tmp/ccycgN0U.s:1775   .progmem.data:0000000000000005 __c.7
     /tmp/ccycgN0U.s:1779   .bss:0000000000000009 _alarms
     /tmp/ccycgN0U.s:440    .text:000000000000004e __vector_13
     /tmp/ccycgN0U.s:1762   .bss:0000000000000005 _cnt.6
     /tmp/ccycgN0U.s:1825   .bss:0000000000000047 _ticks
     /tmp/ccycgN0U.s:1791   .bss:0000000000000039 button_ticks
     /tmp/ccycgN0U.s:1759   .bss:0000000000000004 sd.4
     /tmp/ccycgN0U.s:1756   .bss:0000000000000003 i.3
     /tmp/ccycgN0U.s:1747   .bss:0000000000000001 cnt.2
     /tmp/ccycgN0U.s:1752   .data:0000000000000000 delay.1
                             .bss:0000000000000000 i.0
     /tmp/ccycgN0U.s:1771   .bss:0000000000000007 _alarm_cur
     /tmp/ccycgN0U.s:1788   .bss:0000000000000038 _cur
     /tmp/ccycgN0U.s:1785   .bss:0000000000000034 _buf
     /tmp/ccycgN0U.s:1795   .progmem.data:000000000000000a _map
     /tmp/ccycgN0U.s:1801   .progmem.data:0000000000000015 _font
     /tmp/ccycgN0U.s:1822   .bss:0000000000000046 _seconds
     /tmp/ccycgN0U.s:1767   .progmem.data:0000000000000000 __c.5

UNDEFINED SYMBOLS
__mulqi3
__mulhi3
__udivmodqi4
__do_copy_data
__do_clear_bss
